/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package igu;

import Clases.Agenda;
import Clases.Contacto;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mauricio
 */
public class Ventana extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(Ventana.class.getName());

    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
    }
    
    Agenda agenda = new Agenda();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNom = new javax.swing.JTextField();
        txtNum = new javax.swing.JTextField();
        botonaniadir = new javax.swing.JButton();
        botonEliminar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menu = new javax.swing.JMenu();
        optImportar = new javax.swing.JMenuItem();
        optExportar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Numero"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Nombre");

        jLabel2.setText("Numero");

        botonaniadir.setText("Agregar Contacto");
        botonaniadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonaniadirActionPerformed(evt);
            }
        });

        botonEliminar.setText("Eliminar Contacto");
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarActionPerformed(evt);
            }
        });

        menu.setText("Exportar/Importar");

        optImportar.setText("Importar");
        optImportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optImportarActionPerformed(evt);
            }
        });
        menu.add(optImportar);

        optExportar.setText("Exportar");
        optExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optExportarActionPerformed(evt);
            }
        });
        menu.add(optExportar);

        jMenuBar1.add(menu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonaniadir)
                    .addComponent(botonEliminar)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNum, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                            .addComponent(txtNom))))
                .addContainerGap(97, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(botonaniadir)
                .addGap(18, 18, 18)
                .addComponent(botonEliminar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void optImportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optImportarActionPerformed
        JFileChooser buscador = new JFileChooser();
        int resultado = buscador.showOpenDialog(this);

        if (resultado == JFileChooser.APPROVE_OPTION) {
            File archivo = buscador.getSelectedFile();
            
            String [] ruta = archivo.getAbsolutePath().split("/");
            String nomarchivo="";
            for (String parte : ruta) {
            nomarchivo=parte;
            }
            agenda.importarContactos(nomarchivo);

        }
        
        ActualizarTablaConLista();
        
    }//GEN-LAST:event_optImportarActionPerformed

    private void optExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optExportarActionPerformed
       
        JFileChooser chooser = new JFileChooser();
        int resultado = chooser.showSaveDialog(this);

        if (resultado == JFileChooser.APPROVE_OPTION) {
            File archivo = chooser.getSelectedFile();
            
            String [] ruta = archivo.getAbsolutePath().split("/");
            String nomarchivo="";
            for (String parte : ruta) {
            nomarchivo=parte;
            }
            agenda.exportarContactos(nomarchivo);
            
        }
        
        
    
    }//GEN-LAST:event_optExportarActionPerformed

    private void botonaniadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonaniadirActionPerformed
        
        Contacto c = new Contacto(txtNom.getText(), txtNum.getText());
        agregarAtabla(c);
        
        txtNom.setText("");
        txtNum.setText("");
        
        
    }//GEN-LAST:event_botonaniadirActionPerformed

    private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarActionPerformed
        
        EliminarDeTabla();
    }//GEN-LAST:event_botonEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton botonaniadir;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JMenu menu;
    private javax.swing.JMenuItem optExportar;
    private javax.swing.JMenuItem optImportar;
    private javax.swing.JTextField txtNom;
    private javax.swing.JTextField txtNum;
    // End of variables declaration//GEN-END:variables
    
    
    public void ActualizarTablaConLista(){
        for (Contacto c : agenda.getContactos()) {
            if(!c.getNombre().equals("")&&!c.getTelefono().equals("")){
            agenda.aniadirContacto(c);
           
            DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
            modelo.addRow(new Object[]{c.getNombre(),c.getTelefono()});
            }
        }
    }
    
    public void agregarAtabla(Contacto c){
        if(!c.getNombre().equals("")&&!c.getTelefono().equals("")){
        agenda.aniadirContacto(c);
        //encuentro el modelo (forma mas facil)
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.addRow(new Object[]{c.getNombre(),c.getTelefono()});
        }
    }
    
    public void EliminarDeTabla (){
    DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
    int fila = jTable1.getSelectedRow();
    
    if (fila >= 0) {
        modelo.removeRow(fila);
    } else {
        JOptionPane.showMessageDialog(this, "Debe seleccionar una fila");
    }
    
    agenda.eliminarContactoPorIndice(fila);
    }
    
    
}
